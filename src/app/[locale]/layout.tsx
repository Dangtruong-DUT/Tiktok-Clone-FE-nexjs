import type { Metadata } from "next";
import "./globals.css";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import { LocalesType } from "@/i18n/config";
import { tiktokDisplayFont, tiktokFont } from "@/config/font";
import { ThemeProvider } from "@/provider/theme-provider";
import { AppProvider } from "@/provider/app-provider";
import StoreProvider from "@/provider/store-provider";

export const metadata: Metadata = {
    title: "Tiktok",
    description: "Generated by create next app",
};

export function generateStaticParams() {
    return routing.locales.map((locale) => ({ locale }));
}

export default async function LocaleLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode;
    params: Promise<{ locale: LocalesType }>;
}>) {
    // Ensure that the incoming `locale` is valid
    const { locale } = await params;
    if (!hasLocale(routing.locales, locale)) {
        notFound();
    }

    return (
        <html lang={locale} suppressHydrationWarning>
            <body className={`${tiktokDisplayFont.variable} ${tiktokFont.variable} antialiased`}>
                <NextIntlClientProvider>
                    <StoreProvider>
                        <AppProvider>
                            <ThemeProvider
                                attribute="class"
                                defaultTheme="system"
                                enableSystem
                                disableTransitionOnChange
                            >
                                {children}
                            </ThemeProvider>
                        </AppProvider>
                    </StoreProvider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
